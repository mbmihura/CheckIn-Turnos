using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;

namespace db__Turnos
{
    public class FuncionesDb
    {
        //TODO: cifrar cadena conexion.
        public DataTable getTurnosAbiertos()
        {
            return new AutoGeneratedDataTable("SELECT Usuarios.usuario, Usuarios.nombre, Turnos.fechaInicio FROM Usuarios INNER JOIN Turnos ON Usuarios.id = Turnos.idUsuario WHERE (((Turnos.fechaFin)=Null))");
        }

        public void AbrirTurnos(int idUsuario, DateTime inicio)
        {
            //TODO: filtrar campos contra SQL inyection.
            if (new AutoGeneratedDataTable("SELECT Turnos.idUsuario, Turnos.fechaInicio FROM Turnos WHERE ((Turnos.idUsuario = "+idUsuario+") AND (Turnos.fechaFin=Null))").Rows.Count != 0)
                throw new YaTieneTurnoAbiertoException();
            new SQLNoConsulta("INSERT INTO Turnos (idUsuario, fechaInicio) VALUES ('" + idUsuario + "', #" + inicio.ToString("yyyy/MM/dd hh:mm:ss") + "#)").Ejecutar();
            
        }

        public void CerrarTurno(int idUsuario, DateTime fin)
        {
            //TODO: filtrar campos contra SQL inyection.
            if (new AutoGeneratedDataTable("SELECT Turnos.idUsuario, Turnos.fechaInicio FROM Turnos WHERE ((Turnos.idUsuario = " + idUsuario + ") AND (Turnos.fechaFin=Null))").Rows.Count == 0)
                throw new NoHayTurnoAbiertoException();
            new SQLNoConsulta("UPDATE Turnos SET fechaFin = #" + fin.ToString("yyyy/MM/dd hh:mm:ss") + "# WHERE (idUsuario  = '" + idUsuario + "') AND (fechaFin IS NULL)").Ejecutar();
        }

        public void CambiarContraseña(int idUsuario, string contraseña)
        {
            //TODO: cifrar contraseña
            new SQLNoConsulta("UPDATE Usuarios SET Usuarios.contraseñaSHA = "+contraseña+" WHERE (((Usuarios.id)="+idUsuario+"))");
        }

        public int Identificar(string usuario, string contraseña)
        {
            DataTable idTable;
            //TODO: filtar caracteres especiales usuario, cifrar contraseña.
            usuario = usuario;
            contraseña = contraseña;

            idTable = new AutoGeneratedDataTable("SELECT TOP 1 Usuarios.id FROM Usuarios WHERE (((Usuarios.usuario)=" + usuario + ") AND ((Usuarios.contraseñaSHA)=" + contraseña + "))");

            return Convert.ToInt32(idTable.Rows[0][0]);
        }

    }
}
